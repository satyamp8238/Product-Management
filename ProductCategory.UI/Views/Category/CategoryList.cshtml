@model ProductCategory.UI.Models.CategoryViewModel

@{
    ViewData["Title"] = "Category";
}

<div class="container mt-5">

    <!-- 🔹 Heading + Page Size Dropdown -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="fw-bold mb-0">Category</h3>

        <div class="d-flex gap-2 align-items-center">

            <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                ➕ Add Category
            </button>
        </div>
    </div>


    <!-- 🔹 Product Table -->
    <table class="table table-hover table-bordered align-middle">
        <thead class="table-light">
            <tr>
                <th>Name</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Categories)
            {
                <tr>
                    <td>@product.Name</td>
                    <td class="text-center">
                        <button class="btn btn-sm btn-outline-primary me-1 edit-btn"
                                data-id="@product.CategoryId"
                                data-name="@product.Name"
                                data-description="@product.Description">
                            Edit
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="@product.CategoryId" data-name="@product.Name">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @*   <!-- 🗑️ Delete Confirmation Modal -->
    <div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteCategoryModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    Are you sure you want to delete category: <strong id="deleteCategoryName"></strong>?
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger btn-sm" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>
 *@
    <!-- 🔳 Add/Edit Category Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="categoryForm" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">
                        <input type="hidden" id="categoryId" />

                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Category Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="categoryName" required maxlength="100" />
                            <div class="invalid-feedback">Category Name is required.</div>
                        </div>

                        <div class="mb-3">
                            <label for="categoryDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="categoryDescription" rows="3"></textarea>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save Category</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("categoryForm");
            const modal = new bootstrap.Modal(document.getElementById("addCategoryModal"));
            const modalTitle = document.getElementById("addCategoryModalLabel");

            // const deleteModal = new bootstrap.Modal(document.getElementById("deleteCategoryModal"));
            // let deleteCategoryId = null;

            // 👉 Submit (Add or Edit)
            form.addEventListener("submit", function (e) {
                e.preventDefault();

                if (!form.checkValidity()) {
                    form.classList.add("was-validated");
                    return;
                }

                const category = {
                    categoryId: document.getElementById("categoryId").value || "00000000-0000-0000-0000-000000000000",
                    name: document.getElementById("categoryName").value,
                    description: document.getElementById("categoryDescription").value
                };

                fetch('/Category/AddOrEditCategory', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(category)
                })
                    .then(res => res.json())
                    .then(data => {
                        alert(`Category ${data.status} successfully.`);
                        modal.hide();
                        form.reset();
                        form.classList.remove("was-validated");
                        document.getElementById("categoryId").value = "";
                        loadCategories(); // Refresh list
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        alert("Something went wrong.");
                    });
            });

            // 👉 Reset on modal close
            document.getElementById("addCategoryModal").addEventListener("hidden.bs.modal", function () {
                form.reset();
                form.classList.remove("was-validated");
                document.getElementById("categoryId").value = "";
                modalTitle.textContent = "Add New Category";
            });

            // 👉 Edit button
            document.querySelectorAll(".edit-btn").forEach(button => {
                button.addEventListener("click", function () {
                    const id = this.dataset.id;
                    const name = this.dataset.name;
                    const description = this.dataset.description;

                    document.getElementById("categoryId").value = id;
                    document.getElementById("categoryName").value = name;
                    document.getElementById("categoryDescription").value = description;
                    modalTitle.textContent = "Edit Category";
                    modal.show();
                });
            });

          
            // 👉 Confirm Delete
                    $(document).on('click', '.delete-btn', function () {
            const id = $(this).data('id');

            if (confirm("Are you sure you want to delete this category?")) {
                $.ajax({
                    url: `/Category/DeleteCategory/${id}`, // Send ID in the URL path
                    type: 'DELETE',
                    success: function (data) {
                        alert(data.message);
                        location.reload();
                    },
                    error: function (xhr) {
                        const err = xhr.responseJSON?.message || 'Something went wrong.';
                        alert(err);
                    }
                });
            }
        });

            function loadCategories() {
                location.reload();
            }
        });
    </script>

}